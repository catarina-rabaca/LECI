library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.std_logic_unsigned.all;

entity Timer_Tempo is
    port(
        ativo        : in std_logic;
        enable       : in std_logic;
        tempo          : in std_logic_vector(7 downto 0);
        timer_out  : out std_logic_vector(7 downto 0);
        next_state   : out std_logic
    );
end Timer_Tempo;

architecture behavioral of Timer_Tempo is
    signal s_tempo : std_logic_vector(7 downto 0);
begin
    process(ativo, enable, tempo)
    begin
        if enable = '1' then
            if ativo = '1' then
                if tempo > "00000000" then
                    s_tempo <= tempo - "00000001";
                else
                    s_tempo <= "00000000"; -- Para evitar valores negativos
                end if;
            else
                s_tempo <= s_tempo;
            end if;
        else
            s_tempo <= s_tempo; -- MantÃ©m o valor anterior se o enable for '0'
        end if;
    end process;

    timer_out <= s_tempo;

    process(s_tempo)
    begin
        if s_tempo = "00000000" then
            next_state <= '1';
        else
            next_state <= '0';
        end if;
    end process;

end behavioral;
